#!/bin/bash

reflectorName "Buildkite Artifact Upload"
reflectorId   "upload_buildkite"

function reflect() {
  echo "Buildkite upload"
  if [ ! -f config/upload_buildkite ]; then
    echo "Config config/upload_buildkite doesn't exist, skipping"
    return 0
  fi

  source config/upload_buildkite

  git_rel_type="${GIT_REL_TYPE}"
  git_rel_tag="${GIT_REL_TAG}"
  rel_filename="$(cat ${ANDROID_PRODUCT_OUT}/system/build.prop | grep -E '^ro.custom.version' | sed -re 's/^ro.custom.version=(.*)$/\1.zip/')"
  rel_file="${ANDROID_PRODUCT_OUT}/${rel_filename}"
  
  messaging_send_message \
    "Uploading ${GIT_REL_NAME} build (${BUILDKITE_PIPELINE_SLUG}) of XOS ${ROM_VERSION_ONLY} ($git_rel_tag) for ${targetdevice} (${buildtype}) as Buildkite artifact"
  
  echo "Uploading $rel_filename"
  pushd $(dirname "$rel_file")
  buildkite-agent artifact upload "$(basename $rel_file)"
  popd
  
  echo "Retrieving artifact information..."
  export BUILDKITE_ARTIFACT_URL=`curl -H "Authorization: Bearer ${BUILDKITE_ARTIFACT_API_KEY}" "https://api.buildkite.com/v2/organizations/${BUILDKITE_ORGANIZATION_SLUG}/pipelines/${BUILDKITE_PIPELINE_SLUG}/builds/${BUILDKITE_BUILD_NUMBER}/artifacts" |  jq -r '.[0].download_url'`
  export BUILDKITE_ARTIFACT_URL=`echo "$BUILDKITE_ARTIFACT_URL" | sed -re 's/https:\/\/api.buildkite.com\/v2\/(.+)\/download/https:\/\/buildkite.com\/\1/g'`
  
  echo "Download link: $BUILDKITE_ARTIFACT_URL"

  rel_type_name="${GIT_REL_NAME}"
  
  messaging_send_message "New ${rel_type_name} build of XOS ${ROM_VERSION_ONLY} ($git_rel_tag) for ${targetdevice} (${buildtype})"$'\n' \
    $'\n'"Changelog:"$'\n'"${Changelog}"$'\n' \
    $'\n'"[Download here]($BUILDKITE_ARTIFACT_URL) (Buildkite artifact)"
}
