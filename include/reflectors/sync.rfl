#!/bin/bash

reflectorName "ROM source sync"
reflectorId   "src_sync"

function reflect() {
  echo -e "${EF_BOLD}Syncing...${CL_RESET}"
  pushd src

  if [ -z "$(git config --global user.name)" ]; then
    git config --global user.name "CI $USER"
  fi
  if [ -z "$(git config --global user.email)" ]; then
    git config --global user.email "${USER}@$(hostname).localdomain"
  fi

  if [ -d .repo ] && [ ! -d .repo/manifests ]; then
    rm -rf .repo
  fi

  if [ ! -d .repo ]; then
    repo init -u https://git.halogenos.org/halogenOS/android_manifest.git -b "$XOS_REVISION"
  fi

  if [ "$sync" == "false" ]; then
    popd
    return 0
  fi

  if [ -d build/make -a -d external/xos -a -d vendor/halogenOS -a -d device -a -d manifest ]; then
    echo "Bootstrap sync not necessary."
  else
    echo "Doing boostrap sync..."
    repo sync -c --no-tags --no-clone-bundle -j2 build/make external/xos vendor/halogenOS
  fi

  pushd external/xos
  git fetch XOS
  git reset --hard XOS/${XOS_REVISION}
  popd

  if [ "$reporesync_full" == "true" ]; then
    (
      ROM_BUILD_CI_TOP="$(pwd)"
      source build/envsetup.sh

      reporesync full confident
    )
  fi

  # new scope to keep envsetup in its own env
  (
    ROM_BUILD_CI_TOP="$(pwd)"
    source build/envsetup.sh

    [ "$syncreset" != "false" ] && reporeset

    if [ "$Purge_local_manifests" == "true" ]; then
      echo "Purging local manifests"
      rm -f .repo/local_manifests/xos.xml
      echo "...done"
      echo
    fi

    reposync slow

  )

  popd
}
